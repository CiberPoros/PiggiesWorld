@using PiggiesWorld.PL.Web.Models;
@using Ninject;
@using PiggiesWorld.BLL.Contracts;
@using PiggiesWorld.Common.Entities;

@{
    Layout = null;

    var authManager = DependencesResolver.Resolver.Get<IAuthManager>();
    var validationManager = DependencesResolver.Resolver.Get<IValudationManager>();

    if (IsPost)
    {
        if (DateTime.TryParse(Request["birthDay"], out DateTime dateOfBirth))
        {
            var userName = Request["login"];
            var password = Request["password"];

            if (!validationManager.IsValidLogin(userName) || !validationManager.IsValidPassword(password))
            {
                Response.Redirect("~/Pages/AuthPages/Registration.cshtml?incorrect=true");
            }

            try
            {
                if (authManager.RegisterUser(new User { LoginName = userName, BirthDay = dateOfBirth }, password))
                {
                    FormsAuthentication.SetAuthCookie(userName, createPersistentCookie: true);
                    Response.Redirect("~");
                }
                else
                {
                    Response.Redirect("~/Pages/AuthPages/Registration.cshtml?incorrect=true");
                }
            }
            catch (PiggiesWorld.Common.Exceptions.DALException e)
            {
                Logger.Log.Error(e.ToString());
                Response.Redirect("~/Pages/ErrorPage.html");
            }
        }
        else
        {
            Response.Redirect("~/Pages/AuthPages/Registration.cshtml?incorrect=true");
        }
    }
}
